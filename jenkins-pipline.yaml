pipeline { 
    agent any 
    environment {
        TEST="test"
        
   }
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Prepare enviroment') { 
            steps { 
                script {
                    try {
                        sh """
                            python3 -m venv ${WORKSPACE}/.venv_${BUILD_NUMBER}
                            echo ${WORKSPACE}/.venv_${BUILD_NUMBER}
                            . ${WORKSPACE}/.venv_${BUILD_NUMBER}/bin/activate
                            python3 -m pip install --upgrade pip
                            pip install --quiet -r ${WORKSPACE}/dev/django-k8s/web/requirements.txt
                        """
                        } catch (err) {
                            echo "Create virtual environment failed: ${err.getMessage()}"
                            error('Failed to prepare virtual environment, please check logs')
                        }
                    }
            }
        }
        stage('Test') { 
            steps { 
                script {
                try {
                sh """
                . ${WORKSPACE}/.venv_${BUILD_NUMBER}/bin/activate
                python3 ${WORKSPACE}/dev/django-k8s/web/manage.py test
                echo 'test'
                """
                }catch (err) {
                            echo "Create virtual environment failed: ${err.getMessage()}"
                            error('Failed to prepare virtual environment, please check logs')
                        }
                }
            }
        }
        stage('Run on remote host'){
            steps {
                withCredentials([usernamePassword(credentialsId: 'ubuntu18size1_credentials', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
                    sshPublisher(
                        failOnError: true,
                        continueOnError: false,
                        publishers: [
                            sshPublisherDesc(
                                configName: 'Ubuntu18Size1',
                                sshCredentials: [
                                    username: "$USERNAME",
                                    encryptedPassphrase: "$USERPASS"
                                ], 
                                transfers: [
                                    sshTransfer(
                                        sourceFiles: '/**',
                                        remoteDirectory: '/tmp',
                                        execCommand: 'ip a'
                                    )
                                ]
                            )
                        ]
                    )
                }
            }
        }
        stage('Deploy') {
            steps {
                echo "input 'Does the staging environment look OK?'"
                echo 'milestone(1)'
                echo 'make publish'
            }
        }
    }
}
